    
// Automatic injection of IGPU properties

DefinitionBlock("", "SSDT", 2, "Y410P", "IGPU", 0)
{
    External(_SB_.PCI0.IGPU, DeviceObj)

    Scope(_SB.PCI0.IGPU)
    {
        Method(_DSM, 4)
        {
            If (!Arg2) { Return (Buffer() { 0x03 } ) }
            Return (Package ()
            {
                "AAPL,slot-name", Buffer() { "Graphics" },             
                "name", Buffer () { "Intel HD Graphics 4600" },
                "model", Buffer() { "Intel HD Graphics 4600" },                "hda-gfx", Buffer() { "onboard-1" },                                                          "device-id", Buffer() { 0x12, 0x04, 0x00, 0x00 },
                "AAPL,ig-platform-id", Buffer()   { 0x07, 0x00, 0x26, 0x0D },
                
                // Enable FBPatcher  
                "framebuffer-patch-enable", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                
                // HDMI in UHD resolution with 60 fps
                "enable-hdmi20", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                
                // fCursorMemorySize=9MB, fbmem=9MB, stolenmem=19MB, vram=2048MB         
                "framebuffer-cursormem", Buffer() { 0x00, 0x00, 0x90, 0x00 },                                                                                                                                                                                                                                                                                                        
                "framebuffer-fbmem", Buffer() { 0x00, 0x00, 0x90, 0x00 },                               
                "framebuffer-stolenmem", Buffer() { 0x00, 0x00, 0x30, 0x01 },                "framebuffer-unifiedmem", Buffer() { 0x00, 0x00, 0x00, 0x80 },
                                 
                // connectors
                "framebuffer-pipecount", Buffer() { 0x02, 0x00, 0x00, 0x00 },                                "framebuffer-portcount", Buffer() { 0x02, 0x00, 0x00, 0x00 },
                
                // @1 HDMI                                                                                                                                                                                                                                                                                                 
                "framebuffer-con1-enable", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                "framebuffer-con1-type", Buffer() { 0x00, 0x08, 0x00, 0x00 },             
                
                // @2 HDMI
                "framebuffer-con2-enable", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                "framebuffer-con2-type", Buffer() { 0x00, 0x08, 0x00, 0x00 },
                
                // Patch0
                "framebuffer-patch0-enable", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                "framebuffer-patch0-find", Buffer() { 0x02, 0x04, 0x09, 0x00, 0x00, 0x04, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00 },
                "framebuffer-patch0-replace", Buffer() { 0xFF, 0x00, 0x09, 0x00, 0x00, 0x04, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00 },
                
                // Patch1
                "framebuffer-patch1-enable", Buffer() { 0x01, 0x00, 0x00, 0x00 },
                "framebuffer-patch1-find", Buffer() { 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1E, 0x02, 0x00, 0x00, 0x05, 0x05, 0x09, 0x01 },
                "framebuffer-patch1-replace", Buffer() { 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1F, 0x02, 0x00, 0x00, 0x05, 0x05, 0x09, 0x01 },               
                               
                // Patch2 4K
                "framebuffer-patch2-enable", Buffer () { 0x01, 0x00, 0x00, 0x00 },
                "framebuffer-patch2-find", Buffer () { 0x03, 0x00, 0x22, 0x0D, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x99, 0x14 },
                "framebuffer-patch2-replace", Buffer () { 0x03, 0x00, 0x22, 0x0D, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x99, 0x14 },
                
                // Inject EDID
                "AAPL00,override-no-edid",Buffer ()
                {
                    0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
                    0x06, 0x10, 0x2A, 0xA0, 0x4C, 0x37, 0x30, 0x32,
                    0x0A, 0x16, 0x01, 0x03, 0x80, 0x1D, 0x10, 0x78,
                    0x0A, 0xFA, 0x65, 0x96, 0x59, 0x55, 0x8F, 0x28,
                    0x1F, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01,
                    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1C, 0x2A,
                    0x40, 0x40, 0x61, 0x84, 0x24, 0x30, 0x30, 0x20,
                    0x35, 0x00, 0x35, 0xAE, 0x10, 0x00, 0x00, 0x19,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x4C,
                    0x47, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61,
                    0x79, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFE,
                    0x00, 0x4C, 0x50, 0x31, 0x34, 0x30, 0x57, 0x44,
                    0x32, 0x2D, 0x54, 0x4C, 0x43, 0x31, 0x00, 0x23,
                } 
            })
        }
    }
}

// EOF
